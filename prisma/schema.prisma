// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Hero {
  id          String   @id
  name        String
  role        String
  difficulty  String
  description String?
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  moods      HeroMood[]
  strengths  HeroStrength[]
  weaknesses HeroWeakness[]
  builds     Build[]

  @@map("heroes")
}

model HeroMood {
  heroId String
  mood   String

  hero Hero @relation(fields: [heroId], references: [id], onDelete: Cascade)

  @@id([heroId, mood])
  @@map("hero_moods")
}

model HeroStrength {
  id         Int    @id @default(autoincrement())
  heroId     String
  strength   String
  orderIndex Int    @default(0) @map("order_index")

  hero Hero @relation(fields: [heroId], references: [id], onDelete: Cascade)

  @@map("hero_strengths")
}

model HeroWeakness {
  id         Int    @id @default(autoincrement())
  heroId     String
  weakness   String
  orderIndex Int    @default(0) @map("order_index")

  hero Hero @relation(fields: [heroId], references: [id], onDelete: Cascade)

  @@map("hero_weaknesses")
}

model Build {
  id         Int      @id @default(autoincrement())
  heroId     String
  mood       String
  earlyGame  String?  @map("early_game")
  midGame    String?  @map("mid_game")
  lateGame   String?  @map("late_game")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  hero  Hero   @relation(fields: [heroId], references: [id], onDelete: Cascade)
  items Item[]

  playstyleDos   PlaystyleDo[]
  playstyleDonts PlaystyleDont[]
  playstyleTips  PlaystyleTip[]

  @@unique([heroId, mood])
  @@map("builds")
}

model Item {
  id          Int    @id @default(autoincrement())
  buildId     Int    @map("build_id")
  name        String
  cost        Int
  phase       String
  priority    String
  description String?
  orderIndex  Int    @default(0) @map("order_index")

  build Build @relation(fields: [buildId], references: [id], onDelete: Cascade)

  @@map("items")
}

model PlaystyleDo {
  id       Int    @id @default(autoincrement())
  buildId  Int    @map("build_id")
  doItem   String @map("do_item")
  orderIndex Int  @default(0) @map("order_index")

  build Build @relation(fields: [buildId], references: [id], onDelete: Cascade)

  @@map("playstyle_dos")
}

model PlaystyleDont {
  id         Int    @id @default(autoincrement())
  buildId    Int    @map("build_id")
  dontItem   String @map("dont_item")
  orderIndex Int    @default(0) @map("order_index")

  build Build @relation(fields: [buildId], references: [id], onDelete: Cascade)

  @@map("playstyle_donts")
}

model PlaystyleTip {
  id         Int    @id @default(autoincrement())
  buildId    Int    @map("build_id")
  tip        String
  orderIndex Int    @default(0) @map("order_index")

  build Build @relation(fields: [buildId], references: [id], onDelete: Cascade)

  @@map("playstyle_tips")
}
